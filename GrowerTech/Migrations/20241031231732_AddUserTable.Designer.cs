// <auto-generated />
using System;
using GrowerTech_MVC.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace GrowerTech_MVC.Migrations
{
    [DbContext(typeof(GrowerTechDbContext))]
    [Migration("20241031231732_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrowerTech_MVC.Models.Agricultor", b =>
                {
                    b.Property<int>("AgricultorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgricultorId"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Escala")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESCALA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME");

                    b.HasKey("AgricultorId");

                    b.ToTable("AGRICULTORES");
                });

            modelBuilder.Entity("GrowerTech_MVC.Models.DadoClimatico", b =>
                {
                    b.Property<int>("DadoClimaticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DadoClimaticoId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SENSOR_ID");

                    b.Property<double>("Temperatura")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("TEMPERATURA");

                    b.Property<double>("Umidade")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("UMIDADE");

                    b.HasKey("DadoClimaticoId");

                    b.HasIndex("SensorId");

                    b.ToTable("DADOS_CLIMATICOS");
                });

            modelBuilder.Entity("GrowerTech_MVC.Models.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorId"));

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO");

                    b.HasKey("SensorId");

                    b.ToTable("SENSORES");
                });

            modelBuilder.Entity("GrowerTech_MVC.Models.DadoClimatico", b =>
                {
                    b.HasOne("GrowerTech_MVC.Models.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });
#pragma warning restore 612, 618
        }
    }
}
